/* _grid.scss */

/* _grid config */

$grid-cols: 12;
$grid-gutter: 30px;

/* _grid base */
@include layout-default {

  .container-fluid { width: 100%; }

  .container {
    max-width: $site-max-width;
    margin-right: auto;
    margin-left: auto;
  }

  .row {
    @include clearfix-overflow-visible;
    

    & & {
      margin-right: rem-calc($grid-gutter) / 2 * -1;
      margin-left: rem-calc($grid-gutter) / 2 * -1;

    }
  }

  .col {
    padding-right: rem-calc($grid-gutter) / 2;
    padding-left: rem-calc($grid-gutter) / 2;
  }

  .col-opposite { float: right; }

  @for $i from 1 through $grid-cols {
    .col-#{$i},
    .col-sm-#{$i} {
      float: left;
      width: (100% / $grid-cols) * $i;
      padding-right: rem-calc($grid-gutter) / 2;
      padding-left: rem-calc($grid-gutter) / 2;
    }
  }

  .hide-sm,
  .hide-sm-inline { display: none; }

  /* _grid states and modifiers */
}

/* _grid medium */

@include layout-medium {
  .hide-md { display: none; }

  .container {
    padding-right: $base-unit * 2;
    padding-left: $base-unit * 2;
  }

  @for $i from 1 through $grid-cols {
    .col-md-#{$i} {
      float: left;
      width: (100% / $grid-cols) * $i;
    }
  }
}

/* _grid medium-and-above */

@include layout-medium-and-above {
  .hide-sm { display: block; }

  .hide-md-lg { display: none; }

  .hide-sm-inline { display: inline; }
}

/* _grid large */

@include layout-large {
  .hide-md { display: block; }

  .hide-lg { display: none; }

  @for $i from 1 through $grid-cols {
    .col-lg-#{$i} {
      float: left;
      width: (100% / $grid-cols) * $i;
    }
  }
}
