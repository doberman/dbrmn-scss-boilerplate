/* _typography.scss */

/* _typography config */

$base-font-size: 16px;
$base-linge-height: 150%;
$body-font-family: serif;

$header-font-family: sans-serif;
$header-margin-bottom: 0.5em;
$header-lineheight: $base-linge-height;

$heading-sizes: (
  layout-default: (
    'h1': 24,
    'h2': 20,
    'h3': 19,
    'h4': 18,
    'h5': 17,
    'h6': 16,
  ),
  layout-medium: (
    'h1': 48,
    'h2': 40,
    'h3': 31,
    'h4': 25,
    'h5': 20,
    'h6': 16,
  ),
) !default;

/* _typography mixins */

@mixin font-size($size: $base-font-size) {
  @if $size != none {
    // if this is for the base element for `rem` (e.g. body)
    // - use the `px` based `$base-font-size`
    @if $size == base {
      font-size: $base-font-size;

    // if `$size` is not `px` based (e.g. if it's `em` based)
    // - use only that value
    } @else if unit($size) != 'px' {
      font-size: $size;

    // ok, this is not the base for `rem` and `$size` is `px` based
    // - use both the `px` based `$size` value and a calculated `rem` value
    } @else {
      $rem: #{$size / $base-font-size}rem;
      font-size: $size;
      font-size: $rem;
    }
  }
}

@mixin font-base-attributes($size: none, $weight: none, $style: none, $line-height: none) {
  @if $size != none { @include font-size($size); }
  @if $weight != none { font-weight: $weight; }
  @if $style != none { font-style: $style; }
  @if $line-height != none { line-height: $line-height; }
}

@mixin base-font($size: none, $weight: none, $style: none, $line-height: none) {
  @include font-base-attributes($size, $weight, $style, $line-height);
  font-family: Helvetica, sans-serif;
}

/* _typography heading styles */

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: $header-font-family;
    margin-top: 0;
    margin-bottom: $header-margin-bottom;
    line-height: $header-lineheight;

    small {
      line-height: 0;
    }
  }

  // Heading sizes
  @each $size, $headers in $heading-sizes {
    @include breakpoint($size) {
      @each $header, $font-size in $headers {
        #{$header} {
          font-size: rem-calc($font-size);
        }
      }
    }
  }

/* _typography paragraphs */
p {
  margin-bottom: 1em;
  font-family: $body-font-family;
  line-height: $base-linge-height;
}

/* _typography small */

@include layout-default {

  body {
    @include base-font(base);
  }

}

/* _typography medium */

@include layout-medium {

}

/* _typography medium-and-above */

@include layout-medium-and-above {

}

/* _typography large */

@include layout-large {

}
